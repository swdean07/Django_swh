1:N 관계 모델 구현,

1
- 새 app 생성, settings 에 등록
python manage.py startapp blog

2
등록하기.
프로젝트명/settings.py

INSTALLED_APPS = [
    'blog',
    ...
    ]

3
제목, 내용 정도로 구성을하는 모델 만들기.
blog/models.py 에서,

from django.db import models

# Create your models here.
class Post(models.Model):
    title = models.CharField("포스트 제목", max_length=100)
    content = models.TextField("포스트 내용")

    def __str__(self):
        return self.title
# 댓글 모델도 같이 정의.
class Comment(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE)
    content = models.TextField("댓글 내용")

    def __str__(self):
        return f"{self.post.title}의 댓글 ID:{self.id}"

4
모델의 변경사항이 발생시, 항상 해야할 마이그레이션 작업.

데이터베이스 변경사항 생성
python manage.py makemigrations

생성되어 있는 데이터베이스 변경사항 적용.
python manage.py migrate

5
파이참, 데이터 소스, SQLite 파일 연결.

6
관리자 연결.

Postadmin 구성.
blog/admin.py  에서.

from django.contrib import admin

from blog.models import Post


# Register your models here.
@admin.register(Post)
class PostAdmin(admin.ModelAdmin):
    pass

7
관리자 계정 생성.
python manage.py createsuperuser

8
확인.
http://localhost:8000/admin/
로그인 하기.

9
blog/admin.py 에서.
댓글 추가하기.

...
@admin.register(Comment)
class CommentAdmin(admin.ModelAdmin):
    pass