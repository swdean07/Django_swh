글 과 댓글 보여주기 , 화면 작업,

순서
1. View 함수의 이름 post_list 사용
2. URL /posts/를 사용
3. 템플릿은 post_list.html 사용
4. View, URL, 템플릿 연결 확인.
5. View에서 ORM을 이용해서 모든 글을 가져와 템플릿 전달.
6. 템플릿의 View에서 전달받은 내용을 표시.

================================================

1
View 작성,
blog/views.py 에서.

from django.shortcuts import render

# Create your views here.
def post_list(request):
    return render(request,"post_list.html")

2
URLconf 작업.
프로젝트명/urls.py  에서

from blog.views import post_list

urlpatterns = [
	...
    path('posts/', post_list),

]

3
템플릿 작성,
templates/post_list.html
기본만 표기하기. 페이지 인식.
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>post_list</title>
</head>
<body>
<h1>post_list</h1>
</body>
</html>


4
연결 확인.
http://localhost:8000/posts/

5
화면에 View에서 DB로 부터 받아온 데이터를 전달하기.

blog/views.py

def post_list(request):
    posts = Post.objects.all()
    context = {
        'posts': posts,
    }
    return render(request,"post_list.html",context)

6
화면에서 데이터를 이용해서 출력해주기.
templates/post_list.html

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>post_list</title>
</head>
<body>
<h1>post_list</h1>
    <ul>
        {% for post in posts %}
            <li>
                <h2>{{ post.title }}</h2>
                <p>{{ post.content }}</p>
            </li>
        {% endfor %}
    </ul>
</body>
</html>

7
확인.
http://localhost:8000/posts/


8
댓글 출력 해보기.

장고, ORM을 이용해서, 1:N 객체 접근.

댓글 모델 내부에, 부모의 객체를 참조를 할수 있음.
class Comment(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE)

쉘에서, 접근 연습 해보기.

python manage.py shell

from blog.models import Post, Comment
first_comment = Comment.objects.first()

first_comment.post

자식 -> 부모 방향으로 객체에 접근, 정방향 관계,

부모 -> 자식 방향으로 객체에 접근, 역방향 관계
장고에서, 자동으로 생성을 해주는데,
{N방향 모델명의 소문자화)_set  이름으로 ORM 자동으로 생성.

예)
comment_set 이름으로 ,
부모 -> 자식으로 객체를 참조 가능.

post = Post.objects.first()
post.comment_set
post.comment_set.all()


9
모델의 관계를 분석하고, 참조하는 방법 연습 했고,
실제 화면에 출력해보기.

templates/post_list.html


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>post_list</title>
</head>
<body>
<h1>post_list</h1>
    <ul>
        {% for post in posts %}
            <li>
                <h2>{{ post.title }}</h2>
                <p>{{ post.content }}</p>
            <div>{{ post.comment_set.all }}</div>
            </li>
        {% endfor %}
    </ul>
</body>
</html>


10
단순 출력해서, 필요한 속성만 출력 해보기.



templates/post_list.html


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>post_list</title>
</head>
<body>
<h1>post_list</h1>
    <ul>
        {% for post in posts %}
            <li>
                <h2>{{ post.title }}</h2>
                <p>{{ post.content }}</p>
             <ul>
                {% for comment in post.comment_set.all %}
                    <li>{{ comment.content }}</li>
                    {% empty %}
                    <li>아직 댓글이 없습니다.</li>
                {% endfor %}
            </ul>
            </li>
        {% endfor %}
    </ul>
</body>
</html>
